version: "3.9"

services:
  web:
    build: .
    container_name: order_management
    ports:
      - "8000:8000"
    volumes:
      - .:/app # ⚠️ For development/testing only — remove this volume in production
      - static_volume:/app/static
      - media_volume:/app/media
    restart: always
    env_file:
      - .env
    environment:
          - ENV=production
          - DB_HOST=db
          - DB_PORT=5432
          - POSTGRES_DB=${POSTGRES_DB}
          - POSTGRES_USER=${POSTGRES_USER}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          - DEBUG=${DEBUG}
          - SECRET_KEY=${SECRET_KEY}
          - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    container_name: order_management-db-1
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  pgdata:
  static_volume:
  media_volume: